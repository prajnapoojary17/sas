<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');/** * File Name : Demand collection Model * * Description : This is used to handle demand report  * * Created By : Gauthami * * Created Date : 01/03/2017 * * Last Modified By : Gauthami * * Last Modified Date : 13/04/2017 * */class Demandcollection_model extends CI_model{    /**      # Function :	__construct      # Purpose  :	Class constructor      # params 	 :	None      # Return   :	None     */    public function __construct()    {        parent::__construct();    }    /**      # Function :	display_datas      # Purpose  :	get      # Return   :	Array     */    public function display_datas($ward, $upi, $asstno, $beforedate, $fromdate, $between, $todate)    {        $whereArr = array();        $whereArr1 = array();        if ($ward != "")            $whereArr[] = "tg.p_ward = '{$ward}'";        if ($upi != "")            $whereArr[] = "tg.upi = '{$upi}'";        if ($asstno != "")            $whereArr[] = "tg.assmt_no = '{$asstno}'";        if ($fromdate != "")            $whereArr1[] = "pd.p_year IN ('{$fromdate}','{$between}','{$todate}')";        $whereStr = implode(" AND ", $whereArr);        $whereStr1 = implode(" AND ", $whereArr1);        $whereStr2 = implode(" order by p_year ASC", $whereArr1);        $whereStr1 = '';        if ($whereStr && $whereStr2) {            $whereStr1 = 'AND';        }        $query = $this->db->query("select p_year,b_enhc_tax,b_cess, COALESCE(property_tax,0) as property_tax ,COALESCE(cess,0) as cess,rebate, payment_date,p_total,( b_enhc_tax -COALESCE(property_tax,0) ) taxadj,(b_cess - COALESCE( cess, 0 )) cessadj, @a := ( @a + b_enhc_tax ) - COALESCE(property_tax,0) col3, @b := ( @b + b_cess ) - COALESCE(cess,0) col4 from (SELECT LEFT(pd.p_year,4) as newyear, pd.p_year,SUM(bt.b_enhc_tax) as b_enhc_tax, SUM(bt.b_cess) as b_cess, p.property_tax, p.cess,p.payment_date,p.rebate,p.p_total FROM tbl_generalinfo tg LEFT JOIN prop_details pd ON tg.upi=pd.upi LEFT JOIN building_taxcal bt ON pd.id=bt.prop_id LEFT JOIN payment_details p ON bt.prop_id=p.p_id         WHERE {$whereStr} {$whereStr1} {$whereStr2} GROUP BY pd.p_year ORDER BY pd.p_year ASC) tunion JOIN ( SELECT @a :=0,@b :=0 )t");        return $query->result();    }    /**      # Function :	sidedisplay_data      # Purpose  :	get      # Return   :	Array     */    public function sidedisplay_data($ward, $upi, $asstno, $beforedate, $fromdate, $between, $todate, $limit = 0, $per_page, $forcount)    {        $whereArr = array();        if ($ward != "")            $whereArr[] = "tg.p_ward = '{$ward}'";        if ($upi != "")            $whereArr[] = "tg.upi = '{$upi}'";        if ($asstno != "")            $whereArr[] = "tg.assmt_no = '{$asstno}'";        if ($fromdate != "")            $whereArr1[] = "pd.p_year IN ('{$fromdate}','{$between}','{$todate}')";        if ($ward == "" && $upi == "" && $asstno == "" && $fromdate == "" && $todate == "") {            $query_str = "SELECT tg.upi,tg.assmt_no,tg.p_name,tg.n_road,tg.village,tg.p_ward,tg.p_block,tg.door_no,SUM(pd.area_build) as area_build 			FROM tbl_generalinfo tg LEFT JOIN prop_details pd ON pd.upi=tg.upi WHERE p_year!='' GROUP BY tg.upi";        } else {            $whereStr = implode(" AND ", $whereArr);            $whereStr1 = '';            $whereStr2 = '';            if (isset($whereArr1)) {                $whereStr2 = implode(" order by p_year asc", $whereArr1);            }            if ($whereStr && $whereStr2) {                $whereStr1 = 'AND';            }            $query_str = "SELECT tg.upi,tg.assmt_no,tg.p_name,tg.n_road,tg.village,tg.p_ward,tg.p_block,tg.door_no,SUM(pd.area_build) as area_build 			FROM tbl_generalinfo tg LEFT JOIN prop_details pd ON pd.upi=tg.upi WHERE {$whereStr} {$whereStr1} {$whereStr2} and p_year!='' GROUP BY tg.upi";        }        if ($per_page != 0) {            $query_str .= " LIMIT " . $limit . "," . $per_page;        }        $query = $this->db->query($query_str);        if ($forcount == 0) {            return $query->result();        } else {            return $query->num_rows();        }    }    /**      # Function :	selectyear      # Purpose  :	get      # Return   :	Array     */    public function selectyear()    {        $query = $this->db->query("Select e_year from enhance");        return $query->result();    }    /**      # Function :	ward      # Purpose  :	get      # Return   :	Array     */    public function ward()    {        $query = $this->db->query("Select ward_name from ward");        return $query->result();    }    /**      # Function :	suspcheck      # Purpose  :	suspense yaer check      # Return   :	Array     */    function suspcheck($door_no, $pyear, $ward, $block)    {        $sql = "SELECT p_year FROM prop_detail WHERE door_no = '$door_no' AND p_year = '$pyear' AND p_ward = '$ward' AND p_block = '$block'";        $query = $this->db->query($sql);        return $query->result();    }}